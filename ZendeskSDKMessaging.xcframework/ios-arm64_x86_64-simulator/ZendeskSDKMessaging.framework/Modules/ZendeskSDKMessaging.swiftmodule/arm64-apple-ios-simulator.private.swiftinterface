// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target arm64-apple-ios14.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name ZendeskSDKMessaging
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import CommonCrypto
import CoreImage
import CoreServices
import DeveloperToolsSupport
import Foundation
import MobileCoreServices
import Photos
import PhotosUI
import Swift
import SwiftUI
import UIKit.UIImage
import UIKit
import UniformTypeIdentifiers
import UserNotifications
import WebKit
import ZendeskSDK
import ZendeskSDKConversationKit
import ZendeskSDKCoreUtilities
import ZendeskSDKGuideKit
import ZendeskSDKLogger
@_exported import ZendeskSDKMessaging
import ZendeskSDKStorage
import ZendeskSDKUIComponents
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
import os
extension UIKit.UIImageView {
  @_Concurrency.MainActor @preconcurrency @objc dynamic open func nuke_display(image: UIKit.UIImage?)
}
@objc(ZDKPushResponsibility) public enum PushResponsibility : Swift.Int {
  case messagingShouldDisplay
  case messagingShouldNotDisplay
  case notFromMessaging
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@_hasMissingDesignatedInitializers @objc(ZDKPushNotifications) final public class PushNotifications : ObjectiveC.NSObject {
  @objc public static func updatePushNotificationToken(_ token: Foundation.Data)
  @objc public static func shouldBeDisplayed(_ userInfo: [Swift.AnyHashable : Any]) -> ZendeskSDKMessaging.PushResponsibility
  @objc public static func handleTap(_ userInfo: [Swift.AnyHashable : Any], completion: ((UIKit.UIViewController?) -> Swift.Void)?)
  @objc deinit
}
@_inheritsConvenienceInitializers @objc(ZDKDefaultMessagingFactory) final public class DefaultMessagingFactory : ObjectiveC.NSObject, ZendeskSDK.MessagingFactory {
  @objc final public func createMessaging(with parameters: ZendeskSDK.MessagingFactoryParameters) -> ZendeskSDK.Messaging
  @objc override dynamic public init()
  @objc public init(userLightColors: ZendeskSDKMessaging.UserColors)
  @objc public init(userLightColors: ZendeskSDKMessaging.UserColors, userDarkColors: ZendeskSDKMessaging.UserColors)
  @objc deinit
}
@objc(ZDKUserColors) final public class UserColors : ObjectiveC.NSObject {
  @objc public init(onPrimary: UIKit.UIColor?, onMessage: UIKit.UIColor?, onAction: UIKit.UIColor?)
  @objc deinit
}
#if compiler(>=5.3) && $RetroactiveAttribute
extension CoreFoundation.CGSize : @retroactive Swift.Hashable {
  public func hash(into hasher: inout Swift.Hasher)
}
#else
extension CoreFoundation.CGSize : Swift.Hashable {
  public func hash(into hasher: inout Swift.Hasher)
}
#endif
extension ZendeskSDKMessaging.PushResponsibility : Swift.Equatable {}
extension ZendeskSDKMessaging.PushResponsibility : Swift.Hashable {}
extension ZendeskSDKMessaging.PushResponsibility : Swift.RawRepresentable {}
