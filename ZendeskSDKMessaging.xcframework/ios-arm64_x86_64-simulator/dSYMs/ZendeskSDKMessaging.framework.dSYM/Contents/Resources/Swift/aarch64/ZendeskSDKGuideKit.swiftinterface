// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target arm64-apple-ios14.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name ZendeskSDKGuideKit
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import Foundation
import Swift
import UIKit
import ZendeskSDKCoreUtilities
import ZendeskSDKHTTPClient
import ZendeskSDKStorage
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
final public class GuideKitSettings {
  final public let baseURL: Swift.String
  final public let channelId: Swift.String
  public init(baseURL: Swift.String, channelId: Swift.String)
  @objc deinit
}
public protocol GuideKit {
  func isValidGuideUrl(url: Swift.String) -> Swift.Bool
  func getArticle(for articleUrl: ZendeskSDKGuideKit.GuideArticleUrl, result: @escaping ((Swift.Result<ZendeskSDKGuideKit.GuideArticle, ZendeskSDKGuideKit.GuideKitError>) -> Swift.Void))
  func sendArticleStatsView(for articleUrl: ZendeskSDKGuideKit.GuideArticleUrl, result: ((Swift.Result<Swift.Void, ZendeskSDKGuideKit.GuideKitError>) -> Swift.Void)?)
  @available(iOS 13.0.0, *)
  func getArticle(for articleUrl: ZendeskSDKGuideKit.GuideArticleUrl) async throws -> ZendeskSDKGuideKit.GuideArticle
  func getGuideArticleUrl(for url: Swift.String) -> Swift.Result<ZendeskSDKGuideKit.GuideArticleUrl, ZendeskSDKGuideKit.GuideKitError>
  @available(iOS 13.0.0, *)
  func sendArticleStatsView(for articleUrl: ZendeskSDKGuideKit.GuideArticleUrl) async throws
}
extension ZendeskSDKGuideKit.GuideKit {
  @available(iOS 13.0.0, *)
  public func getArticle(for articleUrl: ZendeskSDKGuideKit.GuideArticleUrl) async throws -> ZendeskSDKGuideKit.GuideArticle
  @available(iOS 13.0.0, *)
  public func sendArticleStatsView(for articleUrl: ZendeskSDKGuideKit.GuideArticleUrl) async throws
}
public protocol GuideKitBuilder {
  func build(with settings: ZendeskSDKGuideKit.GuideKitSettings, and integrationId: Swift.String) -> any ZendeskSDKGuideKit.GuideKit
}
final public class DefaultGuideKitBuilder : ZendeskSDKGuideKit.GuideKitBuilder {
  public init()
  @objc deinit
}
extension ZendeskSDKGuideKit.DefaultGuideKitBuilder {
  final public func build(with settings: ZendeskSDKGuideKit.GuideKitSettings, and integrationId: Swift.String) -> any ZendeskSDKGuideKit.GuideKit
}
final public class GuideArticle : Swift.Equatable {
  final public let id: Swift.UInt64
  final public let locale: Swift.String?
  final public let url: Swift.String
  final public let title: Swift.String?
  final public let body: Swift.String
  final public let attachments: [ZendeskSDKGuideKit.GuideArticleAttachment]
  public init(id: Swift.UInt64, locale: Swift.String?, url: Swift.String, title: Swift.String?, body: Swift.String, attachments: [ZendeskSDKGuideKit.GuideArticleAttachment])
  public static func == (lhs: ZendeskSDKGuideKit.GuideArticle, rhs: ZendeskSDKGuideKit.GuideArticle) -> Swift.Bool
  @objc deinit
}
@_hasMissingDesignatedInitializers final public class GuideArticleUrl : Swift.Equatable {
  final public let url: Swift.String
  final public let articleId: Swift.String
  final public let locale: ZendeskSDKGuideKit.GuideLocale
  public static func == (lhs: ZendeskSDKGuideKit.GuideArticleUrl, rhs: ZendeskSDKGuideKit.GuideArticleUrl) -> Swift.Bool
  @objc deinit
}
public enum GuideArticleVote : Swift.Int, Swift.Codable, Swift.Equatable {
  case upVoted
  case downVoted
  case notVoted
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
final public class GuideLocale : Swift.Equatable {
  public init(locale: Swift.String)
  public static func == (lhs: ZendeskSDKGuideKit.GuideLocale, rhs: ZendeskSDKGuideKit.GuideLocale) -> Swift.Bool
  @objc deinit
}
final public class GuideArticleAttachment : Swift.Equatable {
  final public let id: Swift.UInt64
  final public let title: Swift.String
  final public let type: Swift.String
  final public let size: Swift.Int64?
  final public let url: Swift.String
  public init(id: Swift.UInt64, title: Swift.String, type: Swift.String, size: Swift.Int64?, url: Swift.String)
  public static func == (lhs: ZendeskSDKGuideKit.GuideArticleAttachment, rhs: ZendeskSDKGuideKit.GuideArticleAttachment) -> Swift.Bool
  @objc deinit
}
public enum GuideKitError : Foundation.LocalizedError, Foundation.CustomNSError, Swift.Equatable {
  case failToFetchArticle
  case restricted
  case failToSendStatsView
  case invalidGuideArticleUrl
  public static var errorDomain: Swift.String {
    get
  }
  public func hash(into hasher: inout Swift.Hasher)
  public static func == (a: ZendeskSDKGuideKit.GuideKitError, b: ZendeskSDKGuideKit.GuideKitError) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
extension ZendeskSDKGuideKit.GuideArticleVote : Swift.Hashable {}
extension ZendeskSDKGuideKit.GuideArticleVote : Swift.RawRepresentable {}
extension ZendeskSDKGuideKit.GuideKitError : Swift.Hashable {}
